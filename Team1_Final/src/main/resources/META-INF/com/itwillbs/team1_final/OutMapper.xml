<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.team1_final.mapper.OutMapper">
	<!-- [ 출고 예정 ] -->
	<!-- 거래처 검색 -->
	<select id="selectAcc" resultType="com.itwillbs.team1_final.vo.AccVO">
		SELECT BUSINESS_NO, CUST_NAME
			FROM acc
			<if test='!keyword.equals("")'>
			WHERE
				<choose>
					<when test='searchType.equals("acc_name")'>
						CUST_NAME LIKE '%${keyword}%'
					</when>
					<when test='searchType.equals("acc_code")'>
						BUSINESS_NO LIKE '%${keyword}%'
					</when>
				</choose>
		</if>
		ORDER BY
			BUSINESS_NO DESC
	</select>
	
	
	<!-- 담당자 검색 -->
	<select id="selectEmp" resultType="com.itwillbs.team1_final.vo.HrVO">
	SELECT *
		FROM emp_view
		WHERE
			EMP_NUM LIKE '%${keyword}%'
	</select>
	
	
	<!-- 품목 검색 -->
	<select id="selectPd" resultType="com.itwillbs.team1_final.vo.PdVO">
		SELECT
			PRODUCT_CD, PRODUCT_NAME, SIZE_DES, REMARKS
			FROM product
			<if test='!keyword.equals("")'>
			WHERE
				<choose>
					<when test='searchType.equals("pd_name")'>
						PRODUCT_NAME LIKE '%${keyword}%'
					</when>
					<when test='searchType.equals("pd_code")'>
						PRODUCT_CD LIKE '%${keyword}%'
					</when>
				</choose>
		</if>
		ORDER BY
			PRODUCT_CD DESC
	</select>
	
	
	<!-- 출고예정코드 추가 또는 증가 -->
	<select id="selectToday" resultType="int">
		SELECT COUNT(OUT_SCHEDULE_CD)
			FROM OUT_SCHEDULE
			WHERE
				OUT_SCHEDULE_CD LIKE '${oUT_TODAY}%'
	</select>
	
	
	<!-- 출고 예정 등록 -->
	<insert id="insertOutSch">
		INSERT
			INTO OUT_SCHEDULE
			VALUES (
				#{OUT_SCHEDULE_CD}
				, #{OUT_TYPE_NAME}
				, #{BUSINESS_NO}
				, #{EMP_NUM}
				, #{OUT_DATE}
				, #{REMARKS}
				, 0
				, #{TOTAL_QTY}
			)
	</insert>
	
	
	<!-- 출고 예정 품목 등록 -->
	<insert id="insertOutSchPd">
		INSERT
			INTO OUT_SCHEDULE_PER_PRODUCT
			VALUES (
				#{PRODUCT_CD}
				, #{OUT_SCHEDULE_CD}
				, #{OUT_SCHEDULE_QTY}
				, 0
				, #{PD_OUT_DATE}
				, #{PD_REMARKS}
				, #{STOCK_CD}
				, 0
			)
	</insert>
	
	
	<!-- 출고 예정 목록 조회 -->
	<select id="selectOutSch" resultType="com.itwillbs.team1_final.vo.OutSchVo">
		SELECT
			DISTINCT(out_schedule_cd), out_type_name, cust_name, emp_name, out_date, total_qty, out_complete
			FROM outSch_view
			<if test='!keyword.equals("")'>
			WHERE
				<choose>
					<when test='keyword.equals("0")'>
						OUT_COMPLETE = "0"
					</when>
					<when test='keyword.equals("1")'>
						OUT_COMPLETE = "1"
					</when>
				</choose>
			</if>
		ORDER BY out_schedule_cd
	</select>
	
	
	<!-- 출고 예정 목록 - 품목명 -->
	<select id="selectOutPdName" resultType="com.itwillbs.team1_final.vo.OutSchVo">
		SELECT *
			FROM outSch_view
			WHERE OUT_SCHEDULE_CD = #{outSchCd}
		ORDER BY PRODUCT_NAME DESC
		LIMIT 1
	</select>
	
	
	<!-- 출고 예정 목록 - 품목명 외 개수 조회 -->
	<select id="selectExtraPdCount" resultType="int">
		SELECT COUNT(PRODUCT_NAME)
			FROM outSch_view
			WHERE OUT_SCHEDULE_CD = #{outSchCd}
	</select>
	
	
	<!-- 출고 예정 품목 개별 목록 조회 -->
	<select id="selectPdInfo" resultType="com.itwillbs.team1_final.vo.OutPdVO">
		SELECT *
			FROM outSch_view
			WHERE OUT_SCHEDULE_CD = #{outSchCdList}
	</select>
	
	
	<!-- 출고 예정 종결여부 변경 -->
	<update id="outUpdateCom">
		UPDATE out_schedule
			<choose>
				<when test="comStatus.equals('종결')">
					SET OUT_COMPLETE = "1"
				</when>
				<when test="comStatus.equals('취소')">
					SET OUT_COMPLETE = "0"
				</when>
			</choose>
			WHERE OUT_SCHEDULE_CD = #{outSchCd}
	</update>
	
	
	<!-- [ 출고 처리 ] -->
	<!-- 출고 처리 목록 조회 -->
	<select id="selectOutProSch" resultType="com.itwillbs.team1_final.vo.OutSchVo">
		SELECT
			PD_OUT_SCHEDULE_CD, cust_name, product_name, size_des,
			pd_out_date, OUT_SCHEDULE_QTY, out_qty, pd_out_complete, pd_remarks,
			product_cd,stock_cd
			FROM outSch_view
		ORDER BY PD_OUT_SCHEDULE_CD;
	</select>


	<!-- 출고 예정 품목 수정 데이터 조회 -->
	<select id="selectOutUpdatePd" resultType="com.itwillbs.team1_final.vo.OutSchVo">
		SELECT
			PD_OUT_SCHEDULE_CD,
			OUT_TYPE_NAME,
			emp_num, emp_name,
			BUSINESS_NO, cust_name,
			OUT_DATE, REMARKS,
			product_cd, product_name, size_des, OUT_SCHEDULE_QTY,
			PD_OUT_DATE, pd_remarks,
			STOCK_CD, TOTAL_QTY
		FROM outSch_view
		WHERE
			PD_OUT_SCHEDULE_CD = #{pd_outSch_cd}
			AND PRODUCT_NAME = #{product_name}
			AND STOCK_CD = #{stock_cd}
	</select>


	<!-- 출고 예정 수정 -->
	<update id="updateOutSch">
		UPDATE OUT_SCHEDULE
			SET
				out_type_name = #{outSchPd.OUT_TYPE_NAME}
				, EMP_NUM = #{outSchPd.EMP_NUM}
				, business_no = #{outSchPd.BUSINESS_NO}
				, out_date = #{outSchPd.OUT_DATE}
				, remarks = #{outSchPd.REMARKS}
				, TOTAL_QTY = #{tqty} - #{pdqty} + #{outSchPd.OUT_SCHEDULE_QTY}
			WHERE
				OUT_SCHEDULE_CD = #{outSchPd.OUT_SCHEDULE_CD}
	</update>


	<!-- 출고 예정 품목 수정 -->
	<update id="updateOutSchPd">
		UPDATE OUT_SCHEDULE_PER_PRODUCT
			SET
				PRODUCT_CD = #{outSchPd.PRODUCT_CD}
				, OUT_SCHEDULE_QTY = #{outSchPd.OUT_SCHEDULE_QTY}
				, OUT_DATE = #{outSchPd.PD_OUT_DATE}
				, STOCK_CD = #{outSchPd.STOCK_CD}
			WHERE
				OUT_SCHEDULE_CD = #{outSchPd.OUT_SCHEDULE_CD}
				AND PRODUCT_CD = #{pdcd}
				AND STOCK_CD = #{stcd}
	</update>

</mapper>

